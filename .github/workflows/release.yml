name: Release

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - goos: linux
            goarch: amd64
            name: linux-amd64
          - goos: linux
            goarch: arm64
            name: linux-arm64
          - goos: darwin
            goarch: amd64
            name: darwin-amd64
          - goos: darwin
            goarch: arm64
            name: darwin-arm64
          - goos: windows
            goarch: amd64
            name: windows-amd64
            ext: .exe

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.21"

      - name: Get dependencies
        run: go mod download

      - name: Build binary
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          CGO_ENABLED: 0
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          OUTPUT_NAME="restic-backup-checker-${{ matrix.name }}${{ matrix.ext }}"
          go build -ldflags "-X main.version=${VERSION} -w -s" -o ${OUTPUT_NAME} ./cmd/main.go

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: restic-backup-checker-${{ matrix.name }}
          path: restic-backup-checker-${{ matrix.name }}${{ matrix.ext }}

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Create Release with Assets
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: Release ${{ github.ref_name }}
          body: |
            ## Changes

            See [CHANGELOG.md](https://github.com/${{ github.repository }}/blob/main/README.md#changelog) for details.

            ## Installation

            Download the appropriate binary for your platform:

            - **Linux (x64)**: `restic-backup-checker-linux-amd64`
            - **Linux (ARM64)**: `restic-backup-checker-linux-arm64`
            - **macOS (Intel)**: `restic-backup-checker-darwin-amd64`
            - **macOS (Apple Silicon)**: `restic-backup-checker-darwin-arm64`
            - **Windows (x64)**: `restic-backup-checker-windows-amd64.exe`

            Make the binary executable (Linux/macOS):
            ```bash
            chmod +x restic-backup-checker-*
            ```

            ## Quick Start

            ```bash
            # Authenticate with OneDrive
            ./restic-backup-checker login

            # Set up monitoring
            ./restic-backup-checker setup

            # Start monitoring
            ./restic-backup-checker
            ```
          files: |
            ./artifacts/restic-backup-checker-linux-amd64/restic-backup-checker-linux-amd64
            ./artifacts/restic-backup-checker-linux-arm64/restic-backup-checker-linux-arm64
            ./artifacts/restic-backup-checker-darwin-amd64/restic-backup-checker-darwin-amd64
            ./artifacts/restic-backup-checker-darwin-arm64/restic-backup-checker-darwin-arm64
            ./artifacts/restic-backup-checker-windows-amd64/restic-backup-checker-windows-amd64.exe
          draft: false
          prerelease: false
